resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

- name: slack-notification
  type: docker-image
  source:
    repository: cfcommunity/slack-notification-resource
    tag: latest

resources:
- name: pcf-pipelines
  type: git
  source:
    uri: https://github.com/pivotal-cf/pcf-pipelines.git
    branch: master

- name: pcf-pipelines-release
  type: git
  source:
    uri: git@github.com:pivotal-cf/pcf-pipelines.git
    branch: master
    private_key: {{git_private_key}}

- name: pivnet-rc
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: pcf-automation
    access_key_id: {{pivnet_aws_access_key}}
    secret_access_key: {{pivnet_aws_secret_key}}
    product_version: .*-rc\.\d+

- name: pivnet-release
  type: pivnet
  source:
    api_token: {{pivnet_token}}
    product_slug: pcf-automation
    access_key_id: {{pivnet_aws_access_key}}
    secret_access_key: {{pivnet_aws_secret_key}}

- name: version
  type: semver
  source:
    driver: git
    initial_version: 0.1.0-rc.1
    uri: https://github.com/pivotal-cf/pcf-pipelines
    username: {{github_token}}
    password: x-oauth-basic
    branch: version
    file: version

- name: cf-cli
  type: s3
  source:
    bucket: cf-cli-releases
    region_name: us-west-1
    regexp: releases/v([\d\.]+)/cf-cli_.*_linux_x86-64.tgz

- name: om
  type: github-release
  source:
    user: pivotal-cf
    repository: om
    access_token: {{github_token}}

- name: cliaas
  type: github-release
  source:
    user: pivotal-cf
    repository: cliaas
    access_token: {{github_token}}

- name: slack
  type: slack-notification
  source:
    url: {{slack_webhook_url}}

- name: ginkgo
  type: git
  check_every: 168h # 1 week
  source:
    uri: https://github.com/onsi/ginkgo
    branch: master

- name: gomega
  type: git
  check_every: 168h
  source:
    uri: https://github.com/onsi/gomega
    branch: master

- name: yaml
  type: git
  check_every: 168h
  source:
    uri: https://gopkg.in/yaml.v2
    branch: master

jobs:
- name: test
  on_failure:
    <<: *notify_slack
  plan:
  - aggregate:
    - get: pcf-pipelines
      trigger: true
    - get: ginkgo
    - get: gomega
    - get: yaml
  - task: test
    file: pcf-pipelines/ci/tasks/test.yml

- name: publish-rc
  on_failure:
    <<: *notify_slack
  plan:
  - aggregate:
    - get: pcf-pipelines
      passed: [test]
    - get: cf-cli
    - get: cliaas
      params:
        globs: [cliaas-linux]
    - get: om
      params:
        globs: [om-linux]

  - put: version
    params: {pre: rc}

  - do:
    - task: stamp-release-version
      file: pcf-pipelines/ci/tasks/stamp_release_version.yml
    - put: pcf-pipelines-release
      params:
        repository: stamped-pcf-pipelines
    - put: pcf-pipelines-release
      params:
        repository: stamped-pcf-pipelines
        tag: version/version
        tag_prefix: v
        only_tag: true

  - do:
    - task: create-pivnet-metadata
      file: pcf-pipelines/ci/tasks/create_pivnet_metadata.yml
      params:
        AVAILABILITY: Admins Only
    - task: create-release-tarball
      file: pcf-pipelines/ci/tasks/create_release.yml
    - put: pivnet-rc
      params:
        metadata_file: pivnet-metadata/metadata.yml
        file_glob: pcf-pipelines-release-tarball/*.tgz
        s3_filepath_prefix: {{pivnet_s3_filepath_prefix}}

- name: update-pipelines
  on_failure:
    <<: *notify_slack
  plan:
  - aggregate:
    - get: version
      passed: [publish-rc]
    - get: pcf-pipelines
      resource: pcf-pipelines-release
      passed: [publish-rc]
    - get: pivnet-rc
      trigger: true
      passed: [publish-rc]
    - get: cf-cli
    - get: cliaas
      params:
        globs: [cliaas-linux]
    - get: om
      params:
        globs: [om-linux]

  - task: unpack-rc
    file: pcf-pipelines/tasks/unpack-tarball/task.yml
    input_mapping: { tarball: pivnet-rc }
    output_mapping: { unpacked_tarball: release }

  - do:
    - task: create-update-ert-config
      file: pcf-pipelines/ci/tasks/create_update_ert_config.yml
      params:
        <<: *update_pipeline_params
    - task: update-ert-pipeline
      input_mapping: { config: update_ert_config }
      file: pcf-pipelines/ci/tasks/update_pipeline.yml
      params:
        PIPELINE_NAME: upgrade-ert
        PIPELINE_PATH: release/pcf-pipelines/upgrade-ert/pipeline.yml
        ATC_EXTERNAL_URL: {{atc_external_url}}
        ATC_BASIC_AUTH_USERNAME: {{fly_basic_auth_username}}
        ATC_BASIC_AUTH_PASSWORD: {{fly_basic_auth_password}}
        ATC_TEAM_NAME: {{atc_team_name}}

  - do:
    - task: create-update-buildpacks-config
      file: pcf-pipelines/ci/tasks/create_update_buildpacks_config.yml
      params:
        <<: *update_pipeline_params
    - task: update-buildpacks-pipeline
      input_mapping: { config: update_buildpacks_config }
      file: pcf-pipelines/ci/tasks/update_pipeline.yml
      params:
        PIPELINE_NAME: upgrade-buildpacks
        PIPELINE_PATH: release/pcf-pipelines/upgrade-buildpacks/pipeline.yml
        ATC_EXTERNAL_URL: {{atc_external_url}}
        ATC_BASIC_AUTH_USERNAME: {{fly_basic_auth_username}}
        ATC_BASIC_AUTH_PASSWORD: {{fly_basic_auth_password}}
        ATC_TEAM_NAME: {{atc_team_name}}
    - task: trigger-buildpacks-pipelines
      file: pcf-pipelines/ci/tasks/trigger_buildpacks_pipelines.yml
      params:
        ATC_EXTERNAL_URL: {{atc_external_url}}
        ATC_BASIC_AUTH_USERNAME: {{fly_basic_auth_username}}
        ATC_BASIC_AUTH_PASSWORD: {{fly_basic_auth_password}}
        ATC_TEAM_NAME: {{atc_team_name}}

  - do:
    - task: create-upgrade-opsman-aws-config
      file: pcf-pipelines/ci/tasks/create_upgrade_opsman_aws_config.yml
      params:
        AWS_SECRET_ACCESS_KEY: {{upgrade_opsman_aws_aws_secret_access_key}}
        AWS_REGION: {{upgrade_opsman_aws_aws_region}}
        AWS_VPC_ID: {{upgrade_opsman_aws_aws_vpc_id}}
        AWS_ACCESS_KEY_ID: {{upgrade_opsman_aws_aws_access_key_id}}
        EXISTING_OPSMAN_VM_NAME: {{upgrade_opsman_aws_existing_opsman_vm_name}}
        OPSMAN_URI: {{upgrade_opsman_aws_opsman_uri}}
        OPSMAN_ADMIN_USERNAME: {{upgrade_opsman_aws_opsman_admin_username}}
        OPSMAN_ADMIN_PASSWORD: {{upgrade_opsman_aws_opsman_admin_password}}
        OPSMAN_TIMEOUT_SECONDS: {{opsman_timeout_seconds}}
        OPSMAN_MAJOR_MINOR_VERSION: {{opsman_major_minor_version}}
        PIVNET_TOKEN: {{pivnet_token}}
        GITHUB_TOKEN: {{github_token}}
        CHECK_NEW_OPSMAN_EVERY: 24h
    - task: update-upgrade-opsman-aws
      input_mapping: { config: upgrade_opsman_aws_config }
      file: pcf-pipelines/ci/tasks/update_pipeline.yml
      params:
        PIPELINE_NAME: upgrade-opsman-aws
        PIPELINE_PATH: release/pcf-pipelines/upgrade-ops-manager/aws/pipeline.yml
        ATC_EXTERNAL_URL: {{atc_external_url}}
        ATC_BASIC_AUTH_USERNAME: {{fly_basic_auth_username}}
        ATC_BASIC_AUTH_PASSWORD: {{fly_basic_auth_password}}
        ATC_TEAM_NAME: {{atc_team_name}}

- name: publish-release
  plan:
  - aggregate:
    - get: version
      passed: [update-pipelines]
      params: {bump: final}
    - get: pcf-pipelines
      resource: pcf-pipelines-release
      passed: [update-pipelines]
    - get: cf-cli
    - get: cliaas
      params:
        globs: [cliaas-linux]
    - get: om
      params:
        globs: [om-linux]

  - do:
    - task: stamp-release-version
      file: pcf-pipelines/ci/tasks/stamp_release_version.yml
    - put: pcf-pipelines-release
      params:
        repository: stamped-pcf-pipelines
    - put: pcf-pipelines-release
      params:
        repository: stamped-pcf-pipelines
        tag: version/version
        tag_prefix: v
        only_tag: true

  - do:
    - task: create-pivnet-metadata
      file: pcf-pipelines/ci/tasks/create_pivnet_metadata.yml
      params:
        AVAILABILITY: Selected User Groups Only
    - task: create-release-tarball
      file: pcf-pipelines/ci/tasks/create_release.yml
    - put: pivnet-release
      params:
        metadata_file: pivnet-metadata/metadata.yml
        file_glob: pcf-pipelines-release-tarball/*.tgz
        s3_filepath_prefix: {{pivnet_s3_filepath_prefix}}

  on_failure:
    <<: *notify_slack
  on_success:
    do:
    - task: create-slack-notification
      config:
        platform: linux
        image_resource:
          type: docker-image
          source:
            repository: concourse/buildroot
            tag: curl
        inputs:
        - name: pivnet-release
        outputs:
        - name: notification-text
        run:
          path: sh
          args:
          - -ce
          - |
            release_id=$(cat pivnet-release/metadata.json | jq .Release.ID)
            cat > notification-text/text <<EOF
              Deployed pcf-pipelines final release to https://network.pivotal.io/products/pcf-automation#/releases/$release_id
            EOF
    - put: slack
      params:
        text_file: notification-text/text
        silent: true
    - put: version
      params:
        bump: minor
        pre: rc

update_pipeline_params: &update_pipeline_params
  IAAS_TYPE: {{iaas_type}}
  PIVNET_TOKEN: {{pivnet_token}}
  PIVNET_POLL_INTERVAL: {{pivnet_poll_interval}}
  CF_API_URI: {{cf_api_uri}}
  CF_USER: {{cf_user}}
  CF_PASSWORD: {{cf_password}}
  CHECK_NEW_OPSMAN_EVERY: 24h
  OPSMAN_MAJOR_MINOR_VERSION: {{opsman_major_minor_version}}
  OPSMAN_TIMEOUT_SECONDS: {{opsman_timeout_seconds}}
  OPSMAN_URI: {{opsman_uri}}
  OPSMAN_ADMIN_USERNAME: {{opsman_admin_username}}
  OPSMAN_ADMIN_PASSWORD: {{opsman_admin_password}}
  GITHUB_TOKEN: {{github_token}}

notify_slack: &notify_slack
  put: slack
  params:
    text: "$BUILD_PIPELINE_NAME/$BUILD_JOB_NAME failed: $ATC_EXTERNAL_URL/builds/$BUILD_ID"
